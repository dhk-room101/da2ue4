#pragma once

// ALL AI CONSTANTS GO HERE

#include "core_h.h"

class Engine;

const int32 SCALE_MULTIPLIER = 50;

const int32 PROPERTY_SIMPLE_AI_BEHAVIOR = 18;
const int32 AI_BEHAVIOR_DEFAULT = 0;

// Tactics base conditions (from the TacticsBaseConditions 2da table)
const int32 AI_BASE_CONDITION_HAS_EFFECT_APPLIED = 1;
const int32 AI_BASE_CONDITION_HP_LEVEL = 2;
const int32 AI_BASE_CONDITION_MOST_DAMAGED_IN_PARTY = 3;
const int32 AI_BASE_CONDITION_CLUSTERED_WITH_SAME_GROUP = 4;
const int32 AI_BASE_CONDITION_MOST_HATED_ENEMY = 5;
const int32 AI_BASE_CONDITION_NEAREST_VISIBLE = 6;
const int32 AI_BASE_CONDITION_NEAREST_RACE = 7;
const int32 AI_BASE_CONDITION_NEAREST_CLASS = 8;
const int32 AI_BASE_CONDITION_NEAREST_GENDER = 9;
const int32 AI_BASE_CONDITION_ATTACKING_PARTY_MEMBER = 10;
const int32 AI_BASE_CONDITION_PARTY_MEMBERS_TARGET = 11;
const int32 AI_BASE_CONDITION_HAS_ANY_BUFF_EFFECT = 12;
const int32 AI_BASE_CONDITION_FLIP_COVER_STATE = 13;
const int32 AI_BASE_CONDITION_MANA_OR_STAMINA_LEVEL = 14;
const int32 AI_BASE_CONDITION_VULNERABLE_TO_DAMAGE = 15;
const int32 AI_BASE_CONDITION_ANY = 16;
const int32 AI_BASE_CONDITION_HAS_AMMO_LEVEL = 17;
const int32 AI_BASE_CONDITION_HAS_ARMOR_TYPE = 18;
const int32 AI_BASE_CONDITION_MOST_ENEMIES_HAVE_ARMOR_TYPE = 19;
const int32 AI_BASE_CONDITION_ALL_ENEMIES_HAVE_ARMOR_TYPE = 20;
const int32 AI_BASE_CONDITION_TARGET_HAS_RANK = 21;
const int32 AI_BASE_CONDITION_BEING_ATTACKED_BY_ATTACK_TYPE = 22;
const int32 AI_BASE_CONDITION_USING_ATTACK_TYPE = 23;
const int32 AI_BASE_CONDITION_MOST_ENEMIES_USING_ATTACK_TYPE = 24;
const int32 AI_BASE_CONDITION_ALL_ENEMIES_USING_ATTACK_TYPE = 25;
const int32 AI_BASE_CONDITION_AT_LEAST_X_ENEMIES_ARE_ALIVE = 26;
const int32 AI_BASE_CONDITION_AT_LEAST_X_CREATURES_ARE_DEAD = 27;
const int32 AI_BASE_CONDITION_AT_LEAST_X_ALLIES_ARE_ALIVE = 28;
const int32 AI_BASE_CONDITION_ENEMY_AI_TARGET_AT_RANGE = 29;
const int32 AI_BASE_CONDITION_TARGET_AT_FLANK_LOCATION = 30;
const int32 AI_BASE_CONDITION_SURROUNDED_BY_TARGETS = 31;
const int32 AI_BASE_CONDITION_USING_RANGED_ATTACKS_AT_RANGE = 32;
const int32 AI_BASE_CONDITION_SELF_HP_LEVEL = 33;
const int32 AI_BASE_CONDITION_SELF_MANA_STAMINA_LEVEL = 34;
const int32 AI_BASE_CONDITION_FOLLOWER_AI_TARGET_AT_RANGE = 35;
const int32 AI_BASE_CONDITION_TARGET_USING_ATTACK_TYPE_FOLLOWER = 36;

const int32 AI_TABLE_DEFAULT = 10011;
const int32 AI_TABLE_COWARD = 10130;
const int32 AI_MAX_TACTICS = 50;

// rank ranges types
const int32 AI_RANK_RANGE_NORMAL_OR_HIGHER = -1;
const int32 AI_RANK_RANGE_NORMAL_OR_LOWER = -2;
const int32 AI_RANK_RANGE_ELITE_OR_LOWER = -3;
const int32 AI_RANK_RANGE_ELITE_OR_HIGER = -4;
const int32 AI_RANK_RANGE_BOSS_OR_HIGHER = -5;

// AI ranges IDs
const int32 AI_RANGE_ID_ANY = -1;
const int32 AI_RANGE_ID_INVALID = 0;
const int32 AI_RANGE_ID_SHORT = 1;
const int32 AI_RANGE_ID_MEDIUM = 2;
const int32 AI_RANGE_ID_LONG = 3;

// Target types (from table TacticsTargetTypes from file AI_TacticsConditions)
const int32 AI_TARGET_TYPE_SELF = 1;
const int32 AI_TARGET_TYPE_ALLY = 2;
const int32 AI_TARGET_TYPE_ENEMY = 3;
const int32 AI_TARGET_TYPE_PLACEABLE = 4;
const int32 AI_TARGET_TYPE_HERO = 5;
const int32 AI_TARGET_TYPE_FOLLOWER = 6; // auto generated by GUI/engine
const int32 AI_TARGET_TYPE_MOST_HATED = 7;
const int32 AI_TARGET_TYPE_MAIN_CONTROLLED = 18;


// Tactics command types (from table CommandTypes from file AI_TacticsConditions)
const int32 AI_COMMAND_INVALID = 0;
const int32 AI_COMMAND_ATTACK = 2;
const int32 AI_COMMAND_WAIT = 3;
const int32 AI_COMMAND_USE_ABILITY = 4;
const int32 AI_COMMAND_ACTIVATE_MODE = 5;
const int32 AI_COMMAND_DEACTIVATE_MODE = 6;
const int32 AI_COMMAND_USE_ITEM = 7;
const int32 AI_COMMAND_USE_PLACEABLE = 8;
const int32 AI_COMMAND_MOVE = 9;
const int32 AI_COMMAND_JUMP_TO_LATER_TACTIC = 10;
const int32 AI_COMMAND_SWITCH_TO_MELEE = 11;
const int32 AI_COMMAND_SWITCH_TO_RANGED = 12;
const int32 AI_COMMAND_RUN_SCRIPT = 13;
const int32 AI_COMMAND_FLY = 14; // used currently only for high dragon
const int32 AI_COMMAND_USE_HEALTH_POTION_MOST = 15;
const int32 AI_COMMAND_USE_HEALTH_POTION_LEAST = 16;
const int32 AI_COMMAND_USE_LYRIUM_POTION_MOST = 17;
const int32 AI_COMMAND_USE_LYRIUM_POTION_LEAST = 18;

// potion types
const int32 AI_POTION_TYPE_HEALTH = 1;
const int32 AI_POTION_TYPE_MANA = 2;

// potion powers
const int32 AI_POTION_LEVEL_MOST_POWERFUL = 1;
const int32 AI_POTION_LEVEL_LEAST_POWERFUL = 2;

// Creature variable table consts:
const FName AI_CUSTOM_AI_ACTIVE = "AI_CUSTOM_AI_ACTIVE"; // use or not use custom AI
const FString AI_CUSTOM_AI_VAR_FLOAT = "AI_CUSTOM_AI_VAR_FLOAT"; // variables used to store custom ai values
const FString AI_CUSTOM_AI_VAR_INT = "AI_CUSTOM_AI_VAR_INT";
const FString AI_CUSTOM_AI_VAR_OBJECT = "AI_CUSTOM_AI_VAR_OBJECT";
const FString AI_CUSTOM_AI_VAR_STRING = "AI_CUSTOM_AI_VAR_STRING";
const FString AI_BALLISTA_SHOOTER_STATUS = "AI_BALLISTA_SHOOTER_STATUS"; // return value for AI script
const FName AI_PLACEABLE_BEING_USED = "AI_PLACEABLE_BEING_USED";

// Distances

// AI ranges
const float AI_MELEE_RANGE = 3.5; // Any target within this range is considered a melee target
const float AI_RANGE_SHORT = 3.5;// the same as AI_MELEE_RANGE above

const float AI_STATIONARY_RANGE = 3.5; // trying to make it the same as melee range
const float AI_MOVE_AWAY_DISTANCE_SHORT = 5.0; // Distance to move away from enemy
const float AI_RANGE_MEDIUM = 12.0;
const float AI_MOVE_AWAY_DISTANCE_MEDIUM = 13.0;
const float AI_RANGE_MAX_ALLY_HELP = 15.0;
const float AI_RANGE_MID_LONG = 15.0;
const float AI_RANGE_LONG = 80.0;

// Minimal distance to be away from melee target if can't reach melee distance
const float AI_MINIMAL_MELEE_DISTANCE = 9.0;
// AOE 
const float AI_AOE_FLEE_DISTANCE = 8.0;
const int32 AI_FOLLOWER_AVOID_AOE_CHANCE = 100; // percentage chance for a follower to flee each round

// Monsters melee range attack
const float MONSTER_MELEE_RANGE_OGRE = 3.5;
const float MONSTER_MELEE_RANGE_BROODMOTHER = 3.5;
const float MONSTER_MELEE_RANGE_WILD_SYLVAN = 3.5;
const float MONSTER_MELEE_RANGE_HIGHDRAGON = 9.0;
const float MONSTER_MELEE_RANGE_DRAGON = 3.5;
const float MONSTER_MELEE_RANGE_PRIDE_DEMON = 3.5;

// Light AI
const float LIGHT_AI_MIN_DISTANCE = 20.0;
// Follower engage enemies distance
const float AI_FOLLOWER_ENGAGE_DISTANCE_CLOSE = 15.0;
const float AI_FOLLOWER_ENGAGE_DISTANCE_LONG = 30.0;
// Follower minimal distance to player when the follower has nothing to do (follower will move to formation)
const float AI_FOLLOWER_PLAYER_DISTANCE = 5.0;

// Generic constants

const int32 AI_MAX_CREATURES_NEAREST = 5; // the maximum number of creatures for any GetNearest check
const int32 AI_MAX_NEAREST_PLACEABLE = 10; // the maximum number of placeable for any GetNearest check

// AI flags (from the creature variables table)
const FName AI_FLAG_PREFERS_RANGED = "AI_FLAG_PREFERS_RANGED";
const FName AI_WAIT_TIMER = "AI_WAIT_TIMER";

// Weapon sets definitions
const int32 AI_WEAPON_SET_INVALID = 0;
const int32 AI_WEAPON_SET_MELEE = 1;
const int32 AI_WEAPON_SET_RANGED = 2;
const int32 AI_WEAPON_SET_NONE = 3;

// Ammo levels IDs
const int32 AI_AMMO_LEVEL_INVALID = 0;
const int32 AI_AMMO_LEVEL_LOW = 1;
const int32 AI_AMMO_LEVEL_MEDIUM = 2;
const int32 AI_AMMO_LEVEL_HIGH = 3;

// Ammo levels ratios (number of arrows)
const int32 AI_AMMO_RATIO_LOW = 5; // this number of lower
const int32 AI_AMMO_RATIO_HIGH = 30; // above this number

// Armor types - these values should be valid for creatures as well
const int32 AI_ARMOR_TYPE_INVALID = 0;
const int32 AI_ARMOR_TYPE_LOW = 1;
const int32 AI_ARMOR_TYPE_MEDIUM = 2;
const int32 AI_ARMOR_TYPE_HIGH = 4;

// Attack type - a type of attack a single enemy can be executing at a specific moment
const int32 AI_ATTACK_TYPE_INVALID = 0;
const int32 AI_ATTACK_TYPE_MELEE = 1;
const int32 AI_ATTACK_TYPE_RANGED = 2;
const int32 AI_ATTACK_TYPE_MAGIC = 4;

// How many rounds to override a target when called using UT_CombatStart
const int32 AI_TARGET_OVERRIDE_DURATION = 3;

// A generic delay for when the AI decides not to do anything for a short while.
// This allows the FCommand complete event to fire afterwards and give a chance
// for the AI to decide and do something else instead of stopping doing anything
const float AI_DO_NOTHING_DELAY = 2.0; // seconds
const float AI_DO_NOTHING_DELAY_QUICK = 1.0; // seconds

// Special AI flip cover states:
const int32 AI_FLIP_COVER_READY_FOR_USE = 1;
const int32 AI_FLIP_COVER_USED_BY_ENEMY = 2;

// special AI status flags - used to group all effects, abilities etc'
const int32 AI_STATUS_POLYMORPH = 1;
const int32 AI_STATUS_CHARM = 2;
const int32 AI_STATUS_PARALYZE = 3;
const int32 AI_STATUS_STUN = 4;
const int32 AI_STATUS_SLEEP = 5;
const int32 AI_STATUS_ROOT = 7;
const int32 AI_STATUS_DAZE = 8;
const int32 AI_STATUS_SLOW = 9;
const int32 AI_STATUS_STEALTH = 11;
//const int32 AI_STATUS_POISONED           = 12;
const int32 AI_STATUS_DISEASED = 13;
const int32 AI_STATUS_DEAD = 14;
const int32 AI_STATUS_UNCONSIOUS = 15;
const int32 AI_STATUS_KNOCKDOWN = 16;
const int32 AI_STATUS_GRABBED = 17;
const int32 AI_STATUS_GRABBING = 18;
const int32 AI_STATUS_BERSERK = 19;
const int32 AI_STATUS_CONFUSED = 20;
const int32 AI_STATUS_CANT_ATTACK = 97; // includes anything that prevents from attacking
const int32 AI_STATUS_IMMOBLIZED = 98; // includes anything that prevents movement
const int32 AI_STATUS_MOVEMENT_IMPAIRED = 99; // includes anything that prevents movement or slows

// AI stat types
const int32 AI_STAT_TYPE_HP = 1;
const int32 AI_STAT_TYPE_MANA_OR_STAMINA = 2;

// Last tactic IDs for generic tactics (attack related)
// These are used to store the last tactic executed by a creature. They are usually an ID into the tactic table
// but can have the following IDs for the generic tactics:
const int32 AI_TACTIC_ID_ATTACK = -1;
const int32 AI_TACTIC_ID_SWITCH_MELEE_TO_RANGED = -2;
const int32 AI_TACTIC_ID_SWITCH_RANGED_TO_MELEE = -3;
const int32 AI_TACTIC_ID_WAIT = -4;
const int32 AI_TACTIC_ID_MOVE = -5;

// Flanks (currently used only for Ogre and broodmother)
const int32 AI_FLANK_RIGHT = 1;
const int32 AI_FLANK_LEFT = 2;
const int32 AI_FLANK_BRIGHT = 3;
const int32 AI_FLANK_BLEFT = 4;
const int32 AI_FLANK_FRONT = 5;
const int32 AI_FLANK_LARGE_RIGHT = 6;
const int32 AI_FLANK_LARGE_LEFT = 7;
const int32 AI_FLANK_BRIGHT2 = 8;
const int32 AI_FLANK_BLEFT2 = 9;
const int32 AI_FLANK_DRAGON_FR = 10;
const int32 AI_FLANK_DRAGON_FL = 11;
const int32 AI_FLANK_DRAGON_BR = 12;
const int32 AI_FLANK_DRAGON_BL = 13;
const int32 AI_FLANK_DRAGON_FRONT_FAR = 14;
const int32 AI_FLANK_DRAGON_BACK = 15;
const int32 AI_FLANK_DRAGON_FRONT_CLOSE = 16;
const int32 AI_FLANK_DRAGON_BACK_2 = 17;
const int32 AI_FLANK_DRAGON_BACK_3 = 18;
const int32 AI_FLANK_DRAGON_FRONT_CLOSE_2 = 19;
const int32 AI_FLANK_DRAGON_FRONT_CLOSE_3 = 20;
const int32 AI_FLANK_DRAGON_FRONT_FAR_2 = 21;
const int32 AI_FLANK_DRAGON_FRONT_FAR_3 = 22;

// AI trigger delay - so creatures don't start fighting at the same time
const float AI_TRIGGER_DELAY_RANDOM_MAX = 2.0; // the number will be randomized between 0 and this number
const int32 AI_TRIGGER_DELAY_RANDOM_RANGE = 20; // the number of values within the range

// AI waypoints //TODO scale waypoints
const FString AI_WP_MOVE = "ai_move";
const int32 AI_NEAREST_WP_NUM = 3; // number of WPs to evaluate for movement
const float AI_MAX_WP_RANGE = 20.0; // maximum range of WPs to evaluate for movement
const float AI_WP_OCCUPIED_DISTANCE = 1.0; // a max distance a creature can be away from a WP to occupy it
const FString AI_WP_REGISTER_POSTFIX = "_registered"; // used to flag registered WPs

// Move command parameters
const int32 AI_MOVE_NEAREST_AI_WP = 1;
const int32 AI_MOVE_RANDOM_AI_WP = 2;
const int32 AI_MOVE_HATED_ENEMY = 3;
const int32 AI_MOVE_NEAREST_ENEMY = 4;
const int32 AI_MOVE_NEAREST_ALLY = 5;
const int32 AI_MOVE_AWAY_FROM_ENEMY_MEDIUM = 6;
const int32 AI_MOVE_AWAY_FROM_ENEMY_SHORT = 7;
const int32 AI_MOVE_AWAY_FROM_ENEMY_RANDOM = 8;
const int32 AI_MOVE_AWAY_FROM_ENEMY_COWARD = 9;

// FLY command parameters
const int32 AI_FLY_TURN_MOST_HATED = 1;
const int32 AI_FLY_TURN_NEAREST_AI_WP = 2;
const int32 AI_FLY_TURN_NEAREST_ENEMY = 3;
const int32 AI_FLY_TURN_NEAREST_ALLY = 4;
const int32 AI_FLY_APPROACH_MOST_HATED = 5;
const int32 AI_FLY_APPROACH_NEAREST_ENEMY = 6;
const int32 AI_FLY_APPROACH_AI_WP_NEAREST_TO_MOST_HATED = 7;
const int32 AI_FLY_APPROACH_AI_WP_NEAREST_TO_NEAREST_ENEMY = 8;

// Fly limits //TODO scale Fly
const float AI_TURN_MIN_ANGLE = 20.0; // the minimum angle the dragon will consider turning
const float AI_FLY_MIN_DISTANCE = 3.5;
const float AI_FLY_MAX_DISTANCE = 20.0; // it will be a stomp beyond this distance
const float AI_TURN_MIN_DISTANCE = 1.0; // minimum distance a target must be before the dragon will try turning

// Taunts chance when waiting
const int32 AI_TAUNT_CHANCE = 40;

// Group ranged vs. melee balancing
const float AI_GROUP_RANGED_THRESHOLD = 0.5;
const float AI_GROUP_MELEE_THRESHOLD = 0.6;

// Ballista AI //TODO Scale Ballista
const int32 AI_BALLISTA_SHOOTER_STATUS_INACTIVE = 0;
const int32 AI_BALLISTA_SHOOTER_STATUS_AVAILABLE = 1; // ready to shoot but has no available ballista
const int32 AI_BALLISTA_SHOOTER_STATUS_MOVE_TO_BALLISTA = 2;
const int32 AI_BALLISTA_SHOOTER_STATUS_USE_BALLISTA = 3;
const int32 AI_BALLISTA_SHOOTER_STATUS_FIRE = 4;
const int32 AI_BALLISTA_SHOOTER_STATUS_WAIT_FOR_BALLISTA = 5;
const FString AI_BALLISTA_TAG = "genip_ballista";
const float AI_BALLISTA_MAX_USE_DISTANCE = 20.0; // will try to use ballista only if this distance or closer

												 // Team help
const int32 AI_HELP_TEAM_STATUS_ACTIVE = 1;
const int32 AI_HELP_TEAM_STATUS_HELPING = 2;
const int32 AI_HELP_TEAM_STATUS_CALLED_FOR_HELP = 3;
const int32 AI_HELP_TEAM_STATUS_NORMAL_ALLY_HELP_ACTIVE = 4;

// Stationary states
const int32 AI_STATIONARY_STATE_DISABLED = 0;
const int32 AI_STATIONARY_STATE_SOFT = 1; // will move when attacked
const int32 AI_STATIONARY_STATE_HARD = 2; // will not move when attack
const int32 AI_STATIONARY_STATE_VERY_SOFT = 3; // will move when attacked or enemy is in melee range

											   // AI behavior constants (column names from aibehaviors.xls
const FString AI_BEHAVIOR_ATTACK_BACK = "AttackBack";
const FString AI_BEHAVIOR_CHASE_ENEMY = "ChaseEnemy";
const FString AI_BEHAVIOR_ATTACK_ON_COMBAT_START = "AttackOnCombatStart";
const FString AI_BEHAVIOR_PREFER_RANGE = "PreferRange";
const FString AI_BEHAVIOR_PREFER_MELEE = "PreferMelee";
const FString AI_BEHAVIOR_AVOID_NEARBY_ENEMIES = "AvoidNearbyEnemies";
const FString AI_BEHAVIOR_AVOID_MELEE_ENEMIES = "AvoidMeleeEnemies";
const FString AI_BEHAVIOR_DEFAULT_ATTACK = "DefaultAttack";
const FString AI_BEHAVIOR_AVOID_AOE = "AvoidAOE";

const int32 AI_MOVE_MIN_TIME = 6; // must be greater than the default wait timer (so rogues AI won't stop once they are in stealth)
const int32 AI_WAIT_MIN_TIME = 6;

// Dragon abilities //TODO scale dragon
const float BREATH_RANGE = 6.0;
const float BREATH_ANGLE_START = 45.0;
const float BREATH_ANGLE_END = 135.0;

const float HIGH_BREATH_ANGLE_START = 45.0;
const float HIGH_BREATH_ANGLE_END = 135.0;
const float HIGH_BREATH_RANGE = 15.0;
const float HIGH_BREATH_MIN_RANGE = 6.0;
const float HIGH_BREATH_FACING = 0.0;

const float HIGH_SWEEP_ANGLE_START = 20.0;
const float HIGH_SWEEP_ANGLE_END = 160.0;
const float HIGH_SWEEP_RANGE = 6.0;
const float HIGH_SWEEP_FACING = 0.0;
const float HIGH_SWEEP_FACING_RIGHT = 35.0;
const float HIGH_SWEEP_FACING_LEFT = 325.0;

const float HIGH_TAIL_FLAP_ANGLE_START = 10.0;
const float HIGH_TAIL_FLAP_ANGLE_END = 170.0;
const float HIGH_TAIL_FLAP_RANGE = 12.0;
const float HIGH_TAIL_FLAP_FACING = 180.0;
const float HIGH_TAIL_MIN_RANGE = 5.0;

const float TAIL_FLAP_ANGLE_START = 120.0;
const float TAIL_FLAP_ANGLE_END = 240.0;

const float HIGH_STOMP_RANGE = 6.0;
const float HIGH_STOMP_KNOCKDOWN_RANGE = 7.0;

// command timers
const float AI_COMMAND_TIMER = 10.0;
const float AI_COMMAND_TIMER_QUICK = 5.0;
